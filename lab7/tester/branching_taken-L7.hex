@00000000
// Error flags
93 0a 0b 00 	// 0x00000000: addi s5, s6, 0
13 0b 0b 00 	// 0x00000004: addi s6, s6, 0

// Test jal instruction
ef 00 80 01 	// 0x00000008: jal ra, testfunc
93 8a 1a 00 	// 0x0000000c: addi s5, s5, 1
13 0b 1b 00 	// 0x00000010: addi s6, s6, 1
6f 00 80 01 	// 0x00000014: jal zero, part2
93 8a 1a 00 	// 0x00000018: addi s5, s5, 1
13 0b 1b 00 	// 0x0000001c: addi s6, s6, 1

// when we return, skip two instructions
// testfunc:
67 80 80 00 	// 0x00000020: jalr zero, ra, 8
93 8a 1a 00 	// 0x00000024: addi s5, s5, 1
13 0b 1b 00 	// 0x00000028: addi s6, s6, 1

// Test jalr similarly
// part2:
93 0b 00 02 	// 0x0000002c: addi s7, zero, testfunc
e7 80 0b 00 	// 0x00000030: jalr ra, s7, 0
93 8a 1a 00 	// 0x00000034: addi s5, s5, 1
13 0b 1b 00 	// 0x00000038: addi s6, s6, 1
6f 00 c0 00 	// 0x0000003c: jal zero, part3
93 8a 1a 00 	// 0x00000040: addi s5, s5, 1
13 0b 1b 00 	// 0x00000044: addi s6, s6, 1

// Test branches
// part3:
13 06 c0 ff 	// 0x00000048: addi a2, zero, -4
93 06 f0 ff 	// 0x0000004c: addi a3, zero, -1
13 07 00 00 	// 0x00000050: addi a4, zero, 0
93 07 20 00 	// 0x00000054: addi a5, zero, 2
13 08 30 00 	// 0x00000058: addi a6, zero, 3

// beq
// beq1:
63 06 c6 00 	// 0x0000005c: beq a2, a2, beq2
93 8a 1a 00 	// 0x00000060: addi s5, s5, 1
13 0b 1b 00 	// 0x00000064: addi s6, s6, 1
// beq2:
63 06 c6 00 	// 0x00000068: beq a2, a2, beq3
93 8a 1a 00 	// 0x0000006c: addi s5, s5, 1
13 0b 1b 00 	// 0x00000070: addi s6, s6, 1
// beq3:
63 06 c6 00 	// 0x00000074: beq a2, a2, blt1
93 8a 1a 00 	// 0x00000078: addi s5, s5, 1
13 0b 1b 00 	// 0x0000007c: addi s6, s6, 1

// blt
// blt1:
63 46 d6 00 	// 0x00000080: blt a2, a3, blt2
93 8a 1a 00 	// 0x00000084: addi s5, s5, 1
13 0b 1b 00 	// 0x00000088: addi s6, s6, 1
// blt2:
63 46 e6 00 	// 0x0000008c: blt a2, a4, blt3
93 8a 1a 00 	// 0x00000090: addi s5, s5, 1
13 0b 1b 00 	// 0x00000094: addi s6, s6, 1
// blt3:
63 46 06 01 	// 0x00000098: blt a2, a6, blt4
93 8a 1a 00 	// 0x0000009c: addi s5, s5, 1
13 0b 1b 00 	// 0x000000a0: addi s6, s6, 1
// blt4:
63 46 07 01 	// 0x000000a4: blt a4, a6, blt5
93 8a 1a 00 	// 0x000000a8: addi s5, s5, 1
13 0b 1b 00 	// 0x000000ac: addi s6, s6, 1
// blt5:
63 c6 07 01 	// 0x000000b0: blt a5, a6, bne1
93 8a 1a 00 	// 0x000000b4: addi s5, s5, 1
13 0b 1b 00 	// 0x000000b8: addi s6, s6, 1

// bne (new 2)
// bne1:
63 16 d6 00 	// 0x000000bc: bne a2, a3, bne2
93 8a 1a 00 	// 0x000000c0: addi s5, s5, 1
13 0b 1b 00 	// 0x000000c4: addi s6, s6, 1
// bne2:
63 96 b6 00 	// 0x000000c8: bne a3, a1, bge1
93 8a 1a 00 	// 0x000000cc: addi s5, s5, 1
13 0b 1b 00 	// 0x000000d0: addi s6, s6, 1

// bge (new 4)
// bge1:
63 d6 c6 00 	// 0x000000d4: bge a3, a2, bge2
93 8a 1a 00 	// 0x000000d8: addi s5, s5, 1
13 0b 1b 00 	// 0x000000dc: addi s6, s6, 1
// bge2:
63 56 d7 00 	// 0x000000e0: bge a4, a3, bge3
93 8a 1a 00 	// 0x000000e4: addi s5, s5, 1
13 0b 1b 00 	// 0x000000e8: addi s6, s6, 1
// bge3:
63 d6 e7 00 	// 0x000000ec: bge a5, a4, bge4
93 8a 1a 00 	// 0x000000f0: addi s5, s5, 1
13 0b 1b 00 	// 0x000000f4: addi s6, s6, 1
// bge4:
63 56 08 01 	// 0x000000f8: bge a6, a6, bltu1
93 8a 1a 00 	// 0x000000fc: addi s5, s5, 1
13 0b 1b 00 	// 0x00000100: addi s6, s6, 1

// bltu (new 4)
// bltu1:
63 66 d6 00 	// 0x00000104: bltu a2, a3, bltu2
93 8a 1a 00 	// 0x00000108: addi s5, s5, 1
13 0b 1b 00 	// 0x0000010c: addi s6, s6, 1
// bltu2:
63 e6 07 01 	// 0x00000110: bltu a5, a6, bltu3
93 8a 1a 00 	// 0x00000114: addi s5, s5, 1
13 0b 1b 00 	// 0x00000118: addi s6, s6, 1
// bltu3:
63 e6 c7 00 	// 0x0000011c: bltu a5, a2, bltu4
93 8a 1a 00 	// 0x00000120: addi s5, s5, 1
13 0b 1b 00 	// 0x00000124: addi s6, s6, 1
// bltu4:
63 66 d7 00 	// 0x00000128: bltu a4, a3, bgeu1
93 8a 1a 00 	// 0x0000012c: addi s5, s5, 1
13 0b 1b 00 	// 0x00000130: addi s6, s6, 1

// bgeu (new 4)
// bgeu1:
63 76 f8 00 	// 0x00000134: bgeu a6, a5, bgeu2
93 8a 1a 00 	// 0x00000138: addi s5, s5, 1
13 0b 1b 00 	// 0x0000013c: addi s6, s6, 1
// bgeu2:
63 f6 f7 00 	// 0x00000140: bgeu a5, a5, bgeu3
93 8a 1a 00 	// 0x00000144: addi s5, s5, 1
13 0b 1b 00 	// 0x00000148: addi s6, s6, 1
// bgeu3:
63 f6 c6 00 	// 0x0000014c: bgeu a3, a2, bgeu4
93 8a 1a 00 	// 0x00000150: addi s5, s5, 1
13 0b 1b 00 	// 0x00000154: addi s6, s6, 1
// bgeu4:
63 76 f6 00 	// 0x00000158: bgeu a2, a5, measure_end
93 8a 1a 00 	// 0x0000015c: addi s5, s5, 1
13 0b 1b 00 	// 0x00000160: addi s6, s6, 1

// measure_end:
ef 00 00 00 	// 0x00000164: jal ra, measure_end
13 00 00 00 	// 0x00000168: nop 
13 00 00 00 	// 0x0000016c: nop 
13 00 00 00 	// 0x00000170: nop 
13 00 00 00 	// 0x00000174: nop 
13 00 00 00 	// 0x00000178: nop 
13 00 00 00 	// 0x0000017c: nop 
13 00 00 00 	// 0x00000180: nop 
13 00 00 00 	// 0x00000184: nop 
13 00 00 00 	// 0x00000188: nop 
13 00 00 00 	// 0x0000018c: nop 
13 00 00 00 	// 0x00000190: nop 
13 00 00 00 	// 0x00000194: nop 
13 00 00 00 	// 0x00000198: nop 
13 00 00 00 	// 0x0000019c: nop 
13 00 00 00 	// 0x000001a0: nop 

// Basic details
// .org	0x800
@00000800
// .dw 0x0	// Start of PC
00 00 00 00 
// .dw measure_end	// End of PC
64 01 00 00 
// .dw 38	// Num Instruction
26 00 00 00 
// .dw 50	// Minimum IPC * 128
32 00 00 00 

// Which register to check
// .db 0b00000010
// .db 0b00000000
// .db 0b01100000
// .db 0b00000000
02 00 60 00 

// Expected register values
// .org	0x820
@00000820
// .dw 0x00000000, 0x00000168, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
00 00 00 00 
68 01 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
// .dw 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
// .dw 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
// .dw 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
00 00 00 00 
